#!/usr/bin/env bash

# Author: Andrei Biswas
# Date Created: Saturday, May 9, 2020
# Description: Create React components using styled-components

# Colors for text
RED='\033[0;31m'
GREEN='\033[0;32m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
# No Color
NC='\033[0m'

# Check how many components the user has entered
# If component name is empty, notify the user and exit
if [ $# -eq 0 ]
then 
    printf "${RED}Please include at least one component.\n"
    exit 1
fi

# Check if the user has asked for help
helpCheck=$(echo $@ | grep -- '-h\|--help')

# If the user asks for help, then guide the user
if [ ! -z "$helpCheck" ]; then
    printf "${CYAN}mkcomp creates boilerplate code for a new React component and leverages styled-components.${NC}\n"
    echo "Usage: mkcomp [component-name-1] [component-name-2] ... [component-name-n]"
    echo "Type mkcomp -h or mkcomp --help to repeat this message."
    exit 0
fi


# Get the current directory
currProjDir=$(pwd)

echo "Project Directory: $currProjDir"

# Enter the directory
cd $currProjDir

# Check for the components folder in here
# If it does not exist, create it
if [ ! -e "components" ]; then
    printf "${CYAN}Creating a components folder...\n"
    mkdir components
fi


# Enter the components folder
cd components

# Go through all the arguments
for newComponent in $@
do
    # Check if the input is purely just letters
    if [[ $newComponent =~ ^[a-zA-Z]+$ ]]
    then
        # Check if the component exists
        # If it does, notify the user and continue to the rest
        if [ -e $newComponent ]
        then 
            printf "${YELLOW}$newComponent already exists.\n"
        else
            # Create the component
            mkdir $newComponent

            # Create the two files: index.js and styled.js in the component folder
            touch $newComponent/index.js
            touch $newComponent/styled.js

            # In index.js, input boilerplate code
            echo "\
import React from 'react';

const $newComponent = (props) => {
  return(
    null
  );
};

export { $newComponent };\
            " >> $newComponent/index.js

            # In styled.js, input boilerplate code
            echo "import styled from 'styled-components';" >> $newComponent/styled.js

            # Notify the user process in complete and exit
            printf "${GREEN}$newComponent has been successfully created!\n"
        fi
    # Otherwise, notify the user that is an invalid name
    else 
        printf "${RED}Please input a valid format for the component name\n"
    fi

done

# When done, exit
exit 0